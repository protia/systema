#include <common.inc>

char cur_line[MAX_BUF] := "";
int line_size := 0;
int off := 0;

char *file_name := "dumb.c";
int lineno := 0;
int col := 0;
int last_col := 0;

FILE *fd;
int has_ungetc := 0; /* unget char */
int last_chr;

def io_init: func(fin: @FILE)
begin
    fd := fin;
end;

def get_cur_line: func() returns @[byte]
begin
    return cur_line;
end;

def get_off: func() returns four
begin
    return off;
end;

def get_file_name: func() returns @[byte]
begin
    return file_name;
end;

def get_lineno: func() returns four
begin
    return lineno;
end;

def get_col: func() returns four
begin
    return col;
end;

def get_char: func() returns four
    def ret : four;
    def i   : four;
    def eptr: @[byte];
begin
    ret := 0;
    if line_size == off then
        /* we need to read new line */
        if ! fgets(cur_line, MAX_BUF-1, fd) then
            /* EOF */
            ret := EOF;
        else
            /* hash lines have special treatment */
            if cur_line[0] == '#' then
                /* parse hash line */
                lineno := strtol(&cur_line[2], &eptr, 10)-1;
                /* get file name */
                file_name := malloc(1024);
                for (i := 2; eptr[i] != '"'; i++) {
                    file_name[i-2] := eptr[i];
                endif;
                file_name[i] := 0;
                /* get next token */
                ret := get_char();
            else
                line_size := strlen(cur_line);
                last_col := col;
                off := 1;
                col := 1;
                lineno++;
                ret := cur_line[0];
            endif;
        endif;
    else
        ret := cur_line[off];
        off++;
        col++;
    endif;
    return ret;
end;

def next_char: func() returns four
begin
    if has_ungetc == 1 then
        has_ungetc := 0;
        col++;
    else
        last_chr := get_char();
    endif;
    return last_chr;
end;

def unread_char: func()
begin
    col--;
    if col == 0 then
        col := last_col;
        lineno--;
    endif;
    has_ungetc := 1;
end;
