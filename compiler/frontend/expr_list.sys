#include "common.inc"

def parse_expr_list: func() returns @expr_list_t
    def expr_list: @expr_list_t;
begin
    /* expr_list: expr ',' expr_list | lambda */
    expr_list := alloc_expr_list();
    /* next token is ;, ), or : ? */
    get_lexeme();
    unget_lexeme();
    if !strcmp(&lex.val, ";") or
       !strcmp(&lex.val, ")") or
       !strcmp(&lex.val, ":")
    then
        /* empty expr list */
    else
        /* evaluate expr */
        expr_list@.expr := parse_expr();
        /* read comma */
        get_lexeme();
        if ! strcmp(&lex.val, ",") then
            /* more expressions are following */
            expr_list@.sublist := parse_expr_list();
        else
            /* we are done */
            unget_lexeme();
            expr_list@.sublist := alloc_expr_list();
        endif;
        /* update count */
        expr_list@.count := expr_list@.sublist@.count + 1;
    endif;
    return expr_list;
end;
