/*****************************************************************************/
/*                           Error Handling                                  */
/*****************************************************************************/

/* Utility library */
#include <Utils.inc>

/* Error module */
#include "Error.inc"

/*****************************************************************************/
/*                              Globals                                      */
/*****************************************************************************/

/* Did any error happen yet? */
def ErrorFlag: Int32T;

/*****************************************************************************/
/*                            ErrorTrigger                                   */
/*****************************************************************************/

def ErrorTrigger: func()
begin

   /* print empty line if this is the first error */
   if ErrorFlag == FALSE then
      UtilsConsoleWriteStr("\n");
   endif;

   /* set error flag */
   ErrorFlag := TRUE;

   /* tell config library that there is error */
   UtilsEnvironSet("err", "yes");

end;

/*****************************************************************************/
/*                            ErrorHeader                                    */
/*****************************************************************************/

def ErrorHeader: func(ErrorData: @ErrorDataT)
begin

   /* print error header */
   UtilsConsoleWriteStr("Front-end Error:\n");
   UtilsConsoleWriteStr("----------------\n");

   /* if ErrorData is available, print more information */
   if ErrorData != NULL then

      /* print file name */
      UtilsConsoleWriteStr("File: ");
      UtilsConsoleWriteStr(ErrorData@.FileName);
      UtilsConsoleWriteStr("\n");

      /* print line number */
      UtilsConsoleWriteStr("Line: ");
      UtilsConsoleWriteInt(ErrorData@.LineNo);
      UtilsConsoleWriteStr("\n");

   endif;

end;

/*****************************************************************************/
/*                            ErrorBodyStr                                   */
/*****************************************************************************/

def ErrorBodyStr: func(String: @StringT)
begin

   /* print error message */
   UtilsConsoleWriteStr(String);

end;

/*****************************************************************************/
/*                            ErrorBodyInt                                   */
/*****************************************************************************/

def ErrorBodyInt: func(Integer: Int32T)
begin

   /* print error message */
   UtilsConsoleWriteInt(Integer);

end;

/*****************************************************************************/
/*                             ErrorFooter                                   */
/*****************************************************************************/

def ErrorFooter: func(ErrorData: @ErrorDataT)

   /* loop counter */
   def I: Int32T;

begin

   /* if ErrorData is available, print more information */
   if ErrorData != NULL then

      /* print line */
      UtilsConsoleWriteStr(ErrorData@.Line);

      /* line doesn't contain \n? */
      if ErrorData@.Line@[ErrorData@.LineSize-1] != '\n' then
         UtilsConsoleWriteStr("\n");
      endif;

      /* print spaces */
      I := 0;
      while I < ErrorData@.LineOff do
         UtilsConsoleWriteStr(" ");
         I++;
      loop;

      /* now print the fancy ^ */
      UtilsConsoleWriteStr("^");

   endif;

   /* print error footer */
   UtilsConsoleWriteStr("\n\n");

end;

/*****************************************************************************/
/*                             ErrorInit                                     */
/*****************************************************************************/

def ErrorInit: func()
begin

   /* initialize error flag */
   ErrorFlag := FALSE;

end;

/*****************************************************************************/
/*                            ErrorCleanup                                   */
/*****************************************************************************/

def ErrorCleanup: func()
begin

   /* nothing to do */

end;
