/* Utility library */
#include <Utils.inc>

/* Error Module */
#include "Error.inc"

/* Lexer Module */
#include "Lexer.inc"

/*****************************************************************************/
/*                               Main                                        */
/*****************************************************************************/

def main: func(argc: Int32T, argv: @[@StringT]) returns Int32T

   /* file names */
   def inFileName : @StringT;
   def outFileName: @StringT;

   /* flags/counters */
   def I          : Int32T;

begin

   /* initialize local variables */
   inFileName  := NULL;
   outFileName := NULL;
   I           := 0;

   /* read arguments */
   for I from 0 to argc -1 do
      /* parse in= agument */
      if argv@[I]@[0] == 'i' and
         argv@[I]@[1] == 'n' and
         argv@[I]@[2] == '='
      then
         /* input file */
         inFileName := &argv@[I]@[3] as @[byte];
      endif;
      /* parse out= argument */
      if argv@[I]@[0] == 'o' and
         argv@[I]@[1] == 'u' and
         argv@[I]@[2] == 't' and
         argv@[I]@[3] == '='
      then
         /* output file */
         outFileName := &argv@[I]@[4] as @[byte];
       endif;
   loop;

   /* initialize components */
   ErrorInit();
   LexerInit(inFileName);

   /* translate */
   LexerPlay();

   /* clean up things */
   LexerCleanup();

   /* done */
   return ErrorFlag;

end;
